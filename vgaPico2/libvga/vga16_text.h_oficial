#ifndef VGA16_TEXT_H
#define VGA16_TEXT_H

#include <stdint.h>
#include "pico/stdlib.h"
#include "hardware/pio.h"
#include "hardware/dma.h"
#include "colors.h"
#include "vga16_drv.h"

// Estrutura opaca para encapsulamento
typedef struct vga16_text_t vga16_text_t;
// For accessing the font library
#define pgm_read_byte(addr) (*(const unsigned char *)(addr))

// Construtor e Destrutor
vga16_text_t* vga16_text_create(uint8_t mode);
void vga16_text_destroy(vga16_text_t* vga);

// Métodos públicos
void vga16_text_init(vga16_text_t* vga, uint8_t mode);
void vga16_text_clrscr(vga16_text_t* vga);
void vga16_text_pchar(vga16_text_t* vga, uint8_t c);
void vga16_text_draw_pixel(vga16_text_t* vga, int16_t x, int16_t y, color_t color);
void vga16_text_draw_hline(vga16_text_t* vga, int16_t x, int16_t y, int16_t w, color_t color);
void vga16_text_fill_rect(vga16_text_t* vga, int16_t x, int16_t y, int16_t w, int16_t h, color_t color);
void vga16_text_draw_char_interna(vga16_text_t* vga, int16_t x, int16_t y, uint8_t c, color_t color, color_t bg, uint8_t size);
void vga16_text_draw_char(vga16_text_t* vga, uint8_t c, color_t color, color_t bg, uint8_t size);
uint16_t vga16_text_get_cursor_y(const vga16_text_t* vga);
uint16_t vga16_text_get_cursor_x(const vga16_text_t* vga);
uint8_t vga16_text_get_textsize(const vga16_text_t* vga);
void vga16_text_set_text_cursor(vga16_text_t* vga, int16_t x, int16_t y);
void vga16_text_set_text_size(vga16_text_t* vga, uint8_t s);
void vga16_text_set_text_color(vga16_text_t* vga, color_t c);
void vga16_text_set_text_color2(vga16_text_t* vga, color_t c, color_t b);
void vga16_text_set_text_wrap(vga16_text_t* vga, bool w);
void vga16_text_tft_write(vga16_text_t* vga, uint8_t c);
void vga16_text_print_string(vga16_text_t* vga, int8_t* str);
void vga16_text_set_text_color_big(vga16_text_t* vga, color_t color, color_t background);
void vga16_text_write_string_bold(vga16_text_t* vga, int8_t* str);
color_t vga16_text_read_pixel(const vga16_text_t* vga, int16_t x, int16_t y);

// Métodos de acesso às propriedades
uint16_t vga16_text_get_width(const vga16_text_t* vga);
uint16_t vga16_text_get_height(const vga16_text_t* vga);

#endif